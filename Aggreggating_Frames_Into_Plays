# Recall that DesignedRuns_Merged was originally made in the "Data_Cleansing_Code" file
# And then it was further mutated in the PreSnap_Alignment_Code file

# Dissect overall play results rather than frame-by-frame insights
StatsByPlay_DesignedRuns <- DesignedRuns_Merged %>% 
  group_by(gameId, playId, nflId, displayName) %>%
  summarize(Frames = n(), down = max(down), distance = max(ydstogo), Team = max(club),
            PlayerSideOfBall = PlayerSideOfBall[1], HomeTeam = max(homeTeamAbbr), AwayTeam = max(visitorTeamAbbr),
            BallCarrierID = max(ballCarrierId), BallCarrierName = max(ballCarrierDisplayName),
            Description = max(playDescription), quarter = max(quarter),
            PosTeam = max(possessionTeam), DefTeam = max(defensiveTeam),
            SideOfField = max(yardlineSide), HomeScore = max(preSnapHomeScore),
            AwayScore = max(preSnapVisitorScore), PenaltyYards = max(penaltyYards),
            PrePenaltyYardage = max(prePenaltyPlayResult), NetYardage = max(playResult),
            OffFormation = max(offenseFormation), TeamDefendersInBox = max(defendersInTheBox),
            HomeWP = max(preSnapHomeTeamWinProbability),
            AwayWP = max(preSnapVisitorTeamWinProbability),
            HomeWPA = max(homeTeamWinProbabilityAdded), 
            AwayWPA = max(visitorTeamWinProbabilityAdded),
            EP = max(expectedPoints), EPA = max(expectedPointsAdded),
            foulName1 = max(foulName1), foulName2 = max(foulName2),
            foulNFLId1 = max(foulNFLId1), foulNFLId2 = max(foulNFLId2),
            posteam_type = max(posteam_type), yardline_100 = max(yardline_100),
            quarter_seconds_remaining = max(quarter_seconds_remaining),
            half_seconds_remaining = max(half_seconds_remaining),
            game_seconds_remaining = max(game_seconds_remaining),
            sp = max(sp), goal_to_go = max(goal_to_go), no_huddle = max(no_huddle),
            run_location = max(run_location), run_gap = max(run_gap),
            td_team = max(td_team), td_player_name = max(td_player_name),
            td_player_id = max(td_player_id), PosTeamScore = max(posteam_score),
            DefTeamScore = max(defteam_score), ScoreDiff = max(score_differential),
            WP = max(wp), DefenseWP = max(def_wp), WPA = max(wpa),
            third_down_converted = max(third_down_converted), 
            third_down_failed = max(third_down_failed),
            fourth_down_converted = max(fourth_down_converted), 
            fourth_down_failed = max(fourth_down_failed), 
            DefTeam_FumbleForced = max(fumble_forced), 
            OffTeam_Fumble_OutOfBounds = max(fumble_out_of_bounds),
            DefTeam_SoloTackle = max(solo_tackle), DefTeam_Safety = max(safety),
            DefTeam_TFL = max(tackled_for_loss), OffTeam_FumbleLost = max(fumble_lost),
            DefTeam_QBHit = max(qb_hit), DefTeam_Sack = max(sack),
            TeamTouchdown = max(touchdown), TeamRushTD = max(rush_touchdown),
            TeamReturnTD = max(return_touchdown), OffTeam_Fumble = max(fumble),
            DefTeam_Assist_Tackle = max(assist_tackle),
            TFL_player_id_1 = max(tackle_for_loss_1_player_id),
            TFL_player_name_1 = max(tackle_for_loss_1_player_name),
            TFL_player_id_2 = max(tackle_for_loss_2_player_id),
            TFL_player_name_2 = max(tackle_for_loss_2_player_name),
            sack_player_id = max(sack_player_id), sack_player_name = max(sack_player_name),
            half_sack_player_id_1 = max(half_sack_1_player_id),
            half_sack_player_name_1 = max(half_sack_1_player_name),
            half_sack_player_id_2 = max(half_sack_2_player_id),
            half_sack_player_name_2 = max(half_sack_2_player_name),
            penalty_team = max(penalty_team), penalty_player_id = max(penalty_player_id),
            penalty_player_name = max(penalty_player_name), penalty_type = max(penalty_type),
            safety_player_name = max(safety_player_name), safety_player_id = max(safety_player_id),
            Temperature = max(Temperature), roof = max(roof),
            surface = max(surface), EPA_Success = max(success),
            first_down = max(first_down), out_of_bounds = max(out_of_bounds),
            xpass = max(xpass), pass_oe = max(pass_oe),
            IndivTackle = max(tackle), IndivAssist = max(assist),
            Indiv_ForcedFumble = max(forcedFumble), Indiv_MissedTackle = max(pff_missedTackle),
            PlayDirection = max(playDirection), Initial_X = x[1],
            Initial_Y = y[1], MaxSpeed = max(s), AvgSpeed = mean(s),
            MaxAcceleration = max(a), AvgAcceleration = mean(a),
            TotDistance = sum(dis), InitialOrientation = o[1],
            InitialDirection = dir[1], Ball_X_Frame1 = max(Ball_X_Frame1),
            Ball_Y_Frame1 = max(Ball_Y_Frame1), Initial_X_DistFromBall = X_DistFromBall[1],
            Initial_Y_DistFromBall = Y_DistFromBall[1], Initial_Tot_DistFromBall = TotDistFromBall[1],
            Initial_Y_DistFromMOF = Y_distFromMOF[1], Max_X_AbsDistFromBall = max(X_AbsDistFromBall),
            Max_Y_AbsDistFromBall = max(Y_AbsDistFromBall), Max_Tot_DistFromBall = max(TotDistFromBall),
            height = max(height_inches), weight = max(weight), Age = max(Age_Years), 
            WPSuccess = max(WPSuccess), QBAlignment = max(QBAlignment), PosGroup = max(PosGroup),
            Initial_TotDistFromBall_Rank_BySide = TotDistFromBall_Rank_BySideOfBall[1],
            Initial_Y_AbsDistFromBall_Rank_BySide = Y_AbsDistFromBall_Rank_BySide[1],
            Initial_X_AbsDistFromBall_Rank_BySide = X_AbsDistFromBall_Rank_BySide[1],
            position = max(position), AlignedPos_Box = AlignedPos_Box[1],
            num_left_tes = num_left_tes[1], num_right_tes = num_right_tes[1],
            num_total_tes = num_total_tes[1], IndivDefenderInBox = DefenderInBox[1],
            pre_snap_gap = pre_snap_gap[1], RunGap_Numeric = max(RunGap_Numeric),
            DefAlign_Numeric = max(DefAlign_Numeric))

# View(StatsByPlay_DesignedRuns %>% filter(IndivTackle == 0 & IndivAssist == 0 & Indiv_MissedTackle == 0))
# This is empty, i.e. it's impossible to have a 0 in all three columns
# In other words, players who didn't have a "tackle attempt" simply have NA in all three
