# Recall that "MergedData" was originally created in the "Data Cleansing Code" document

# Make sure we have both offensive and defensive players
table(MergedData$position)

# Make broader "PosGroup" label from there
MergedData <- MergedData %>% mutate(PosGroup = ifelse(position %in% c("C", "G", "T"), "OL",
      ifelse(position %in% c("CB", "DB", "FS", "SS"), "DB",
          ifelse(position %in% c("DE", "DT", "NT"), "DL",
             ifelse(position %in% c("FB", "RB"), "RB",
                ifelse(position %in% c("ILB", "MLB", "OLB"), "LB",
                       ifelse(position == "QB", "QB",
                              ifelse(position == "TE", "TE", "WR"))))))))
table(MergedData$PosGroup)

MergedData <- MergedData %>%
  mutate(PlayerSideOfBall = ifelse(((club == homeTeamAbbr) &
                                (possessionTeam == homeTeamAbbr)) |
    ((club == visitorTeamAbbr) &
       (possessionTeam == visitorTeamAbbr)),
  "offense",
  "defense"))

# Run the following code for designed runs separately
DesignedRuns_Merged <- MergedData %>% filter(pass == 0)

# Update X_LOS so it's more accurate than the NFLVerse yardline_100
line_of_scrimmage <- DesignedRuns_Merged %>%
 filter(club == "football", frameId == 1) %>%
 select(gameId, playId, x, y) %>%
 rename(X_LOS = x, Y_LOS = y)

DesignedRuns_Merged <- DesignedRuns_Merged %>%
 left_join(line_of_scrimmage, by = c("playId", "gameId"))

DesignedRuns_Merged <- DesignedRuns_Merged %>%
 mutate(X_distFromLOS = x - X_LOS, Y_distFromMOF = y - 26.65,
 Y_distFromOrigSpot = y - Y_LOS)

FirstFrameOfPlay_DesignedRuns <- DesignedRuns_Merged %>%
  group_by(gameId, playId, PlayerSideOfBall) %>%
  filter(frameId == 1) %>% mutate(X_PreSnap_Rank = rank(-x, ties.method = "first")) %>%
  ungroup() %>%
  select(gameId, playId, nflId, displayName, PlayerSideOfBall, X_PreSnap_Rank, 
         PreSnap_x = x, PreSnap_y = y)
# table(FirstFrameOfPlay_DesignedRuns$X_PreSnap_Rank); rank is never higher than 11

DesignedRuns_Merged <- DesignedRuns_Merged %>%
  merge(FirstFrameOfPlay_DesignedRuns, by = c("gameId", "playId", "nflId", "displayName", "PlayerSideOfBall"))
DesignedRuns_Merged <- DesignedRuns_Merged %>% arrange(gameId, playId)
DesignedRuns_Merged <- DesignedRuns_Merged %>% select(1:4, 6:181, "PlayerSideOfBall")

DesignedRuns_Merged <- DesignedRuns_Merged %>% mutate(PreSnap_OnLOS =
      ifelse(PlayerSideOfBall == "offense" & X_PreSnap_Rank %in% 1:7, "Offense_LOS",
             ifelse(PlayerSideOfBall == "offense" & !X_PreSnap_Rank %in% 1:7, "Offense_Backfield", "Defense")))
table(DesignedRuns_Merged$PreSnap_OnLOS)

# Now define the 5 OL
DesignedRuns_ByLOSAlignment <- DesignedRuns_Merged %>%
  group_by(gameId, playId, PreSnap_OnLOS) %>%
  filter(frameId == 1) %>% 
  mutate(Y_PreSnap_Rank = rank(-y, ties.method = "first")) %>%
  ungroup() %>%
  select(gameId, playId, nflId, displayName, PlayerSideOfBall, position, PreSnap_OnLOS, Y_PreSnap_Rank)

DesignedRuns_Merged <- merge(x = DesignedRuns_Merged, y = DesignedRuns_ByLOSAlignment, 
      by = c("gameId", "playId", "nflId", "displayName", "position", "PreSnap_OnLOS", "PlayerSideOfBall"),
      all.x = TRUE)
DesignedRuns_Merged <- DesignedRuns_Merged %>% arrange(gameId, playId)
DesignedRuns_Merged <- DesignedRuns_Merged %>% select(1:4, 8:179, "position", "PreSnap_OnLOS", "PlayerSideOfBall")

# From here, we know that spots 2-6 in terms of the Y rank are the ineligible OL
DesignedRuns_Merged <- DesignedRuns_Merged %>% mutate(AlignedPos =
    ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 2, "LT",
           ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 3, "LG",
                  ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 4, "C",
                         ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 5, "RG",
                                ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 6, "RT", position))))))




