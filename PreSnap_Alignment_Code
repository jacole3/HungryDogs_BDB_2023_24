# Recall that "MergedData" was originally created in the "Data Cleansing Code" document

# Make sure we have both offensive and defensive players
table(MergedData$position)

# Make broader "PosGroup" label from there
MergedData <- MergedData %>% mutate(PosGroup = ifelse(position %in% c("C", "G", "T"), "OL",
      ifelse(position %in% c("CB", "DB", "FS", "SS"), "DB",
          ifelse(position %in% c("DE", "DT", "NT"), "DL",
             ifelse(position %in% c("FB", "RB"), "RB",
                ifelse(position %in% c("ILB", "MLB", "OLB"), "LB",
                       ifelse(position == "QB", "QB",
                              ifelse(position == "TE", "TE", "WR"))))))))
table(MergedData$PosGroup)

MergedData <- MergedData %>%
  mutate(PlayerSideOfBall = ifelse(((club == homeTeamAbbr) &
                                (possessionTeam == homeTeamAbbr)) |
    ((club == visitorTeamAbbr) &
       (possessionTeam == visitorTeamAbbr)),
  "offense",
  "defense"))

# Run the following code for designed runs separately
DesignedRuns_Merged <- MergedData %>% filter(pass == 0)

FirstFrameOfPlay_DesignedRuns <- DesignedRuns_Merged %>%
  group_by(gameId, playId, PlayerSideOfBall) %>%
  filter(frameId == 1) %>% mutate(X_PreSnap_Rank = rank(-x, ties.method = "first")) %>%
  ungroup() %>%
  select(gameId, playId, nflId, displayName, PlayerSideOfBall, X_PreSnap_Rank, 
         PreSnap_x = x, PreSnap_y = y)
# table(FirstFrameOfPlay_DesignedRuns$X_PreSnap_Rank); rank is never higher than 11

DesignedRuns_Merged <- DesignedRuns_Merged %>%
  merge(FirstFrameOfPlay_DesignedRuns, by = c("gameId", "playId", "nflId", "displayName", "PlayerSideOfBall"))
DesignedRuns_Merged <- DesignedRuns_Merged %>% arrange(gameId, playId)
DesignedRuns_Merged <- DesignedRuns_Merged %>% select(1:4, 6:181, "PlayerSideOfBall")
rm(FirstFrameOfPlay_DesignedRuns)

DesignedRuns_Merged <- DesignedRuns_Merged %>% mutate(PreSnap_OnLOS =
      ifelse(PlayerSideOfBall == "offense" & X_PreSnap_Rank %in% 1:7, "Offense_LOS",
             ifelse(PlayerSideOfBall == "offense" & !X_PreSnap_Rank %in% 1:7, "Offense_Backfield", "Defense")))
table(DesignedRuns_Merged$PreSnap_OnLOS)

# Now define the 5 OL by ranking the "y" column
# This helps us adjust for two players being listed as C (e.g. BUF Mitch Morse, Ryan Bates)
DesignedRuns_ByLOSAlignment <- DesignedRuns_Merged %>%
  group_by(gameId, playId, PreSnap_OnLOS) %>%
  filter(frameId == 1) %>% 
  mutate(Y_PreSnap_Rank = rank(-y, ties.method = "first")) %>%
  ungroup() %>%
  select(gameId, playId, nflId, displayName, PlayerSideOfBall, position, PreSnap_OnLOS, Y_PreSnap_Rank)

DesignedRuns_Merged <- merge(x = DesignedRuns_Merged, y = DesignedRuns_ByLOSAlignment, 
      by = c("gameId", "playId", "nflId", "displayName", "position", "PreSnap_OnLOS", "PlayerSideOfBall"),
      all.x = TRUE)
DesignedRuns_Merged <- DesignedRuns_Merged %>% arrange(gameId, playId)
DesignedRuns_Merged <- DesignedRuns_Merged %>% select(1:4, 8:183, "position", "PreSnap_OnLOS", "PlayerSideOfBall")
rm(DesignedRuns_ByLOSAlignment)

# From here, we know that spots 2-6 in terms of the Y rank are the ineligible OL
DesignedRuns_Merged <- DesignedRuns_Merged %>% mutate(AlignedPos =
    ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 2, "LT",
           ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 3, "LG",
                  ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 4, "C",
                         ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 5, "RG",
                                ifelse(PreSnap_OnLOS == "Offense_LOS" & Y_PreSnap_Rank == 6, "RT", position))))))

# create a distance from LT column
LT_coordinates <- DesignedRuns_Merged %>%
  filter(AlignedPos == "LT") %>%
  select(gameId, playId, x, y, frameId) %>%
  rename(xLT = x,
         yLT = y)

# create a distance from LG column
LG_coordinates <- DesignedRuns_Merged %>%
  filter(AlignedPos == "LG") %>%
  select(gameId, playId, x, y, frameId) %>%
  rename(xLG = x,
         yLG = y)

# create a distance from RT column
RT_coordinates <- DesignedRuns_Merged %>%
  filter(AlignedPos == "RT") %>%
  select(gameId, playId, x, y, frameId) %>%
  rename(xRT = x,
         yRT = y)

# create a distance from RG column
RG_coordinates <- DesignedRuns_Merged %>%
  filter(AlignedPos == "RG") %>%
  select(gameId, playId, x, y, frameId) %>%
  rename(xRG = x,
         yRG = y)

# create a distance from Center column
C_coordinates <- DesignedRuns_Merged %>%
  filter(AlignedPos == "C") %>%
  select(gameId, playId, x, y, frameId) %>%
  rename(xCenter = x,
         yCenter = y)

DesignedRuns_Merged <- DesignedRuns_Merged %>%
  left_join(LT_coordinates, by = c("playId", "gameId", "frameId")) %>%
  left_join(RT_coordinates, by = c("playId", "gameId", "frameId")) %>%
  left_join(RG_coordinates, by = c("playId", "gameId", "frameId")) %>%
  left_join(LG_coordinates, by = c("playId", "gameId", "frameId")) %>%
  left_join(C_coordinates, by = c("playId", "gameId", "frameId"))

# clean up environment
rm(C_coordinates, LT_coordinates, LG_coordinates, RT_coordinates, RG_coordinates)

# Define TEs using Y and X coordinates; 2.5 yds seems reasonable for Y, 1 for X
# Recall that for designed runs, Ball_X_Frame1 & Ball_Y_Frame1 do correlate with LOS
DesignedRuns_TEL1_Identify_Frame1 <- DesignedRuns_Merged %>%
  filter(PlayerSideOfBall == "offense", !AlignedPos %in% c("LT", "LG", "C", "RG", "RT"),
  frameId == 1, y > yLT, y <= 2.5 + yLT, x >= xLT - 1) %>%
  mutate(Is_TEL1 = TRUE) %>%
  select(gameId, playId, nflId, displayName, PlayerSideOfBall, Is_TEL1)

DesignedRuns_Merged <- merge(x = DesignedRuns_Merged, y = DesignedRuns_TEL1_Identify_Frame1, 
                             by = c("gameId", "playId", "nflId", "displayName", "PlayerSideOfBall"),
                             all.x = TRUE)
DesignedRuns_Merged <- DesignedRuns_Merged %>% arrange(gameId, playId)
DesignedRuns_Merged <- DesignedRuns_Merged %>% select(1:4, 6:195, "PlayerSideOfBall")
DesignedRuns_Merged <- DesignedRuns_Merged %>% 
  mutate(Is_TEL1 = ifelse(!is.na(Is_TEL1), TRUE, FALSE))

DesignedRuns_Merged <- DesignedRuns_Merged %>% mutate(AlignedPos =
          ifelse(Is_TEL1 == TRUE, "TEL1", AlignedPos))

# create a distance from TEL1 column
TEL1_coordinates <- DesignedRuns_Merged %>%
  filter(AlignedPos == "TEL1") %>%
  select(gameId, playId, x, y, frameId) %>%
  rename(xTEL1 = x,
         yTEL1 = y)

# Repeat that cycle to define TEL2, TER1, etc.

